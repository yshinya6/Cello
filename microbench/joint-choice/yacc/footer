%%
  int
  yyerror(char const *str)
  {
      extern char *yytext;
      extern int yylineno;
      fprintf(stderr, "line:%d parse error near %s\n",yylineno, yytext);
      return 0;
  }

  static double timediff(struct timeval *s, struct timeval *e) {
    double t1 = (e->tv_sec - s->tv_sec) * 1000.0;
    double t2 = (e->tv_usec - s->tv_usec) / 1000.0;
    return t1 + t2; /* ms */
  }

  int main(int argc, char *const argv[])
  {
      extern int yyparse(void);
      extern FILE *yyin;
      // const char *input_file = NULL;
      int input_size = 0;
      const char *orig_argv0 = argv[0];
      // int opt;


      if (argc == 1 ) {
        fprintf(stdout,"Usage: %s [inputfiles]",argv[0]);
        return 1;
      }

      for (int i = 1; i < argc; i++) {
        double fastest = 0.0;
        for (int j = 0; j < 5; j++) {
          if (!(yyin = fopen(argv[i], "rb"))) {
            fprintf(stderr, "File [%s] is not found!\n", argv[i]);
            return 1;
          }
          int result = 0;
          struct timeval start, end;
          gettimeofday(&start, NULL);
          result = yyparse();
          gettimeofday(&end, NULL);
          if (result) {
            fprintf(stderr, "[%s] Parse Error!!!\n", argv[i]);
            break;
          }
          double execTime = timediff(&start, &end);
          if (fastest == 0.0 || (execTime < fastest) ) {
            fastest = execTime;
          }
          fclose(yyin);
        }
        fprintf(stdout, "%s OK %.4f [ms]\n", argv[i], fastest);
      }
  }
